{
  "version": "2",
  "templates": [
    {
      "type": 3,
      "title": "Nginx Proxy Manager",
      "description": "Docker container for managing Nginx proxy hosts with a simple, powerful interface.",
      "note": "https://github.com/NginxProxyManager/nginx-proxy-manager | def_cred: admin@example.com/changeme",
      "categories": [
        "Web Server",
        "Proxy Server"
      ],
      "platform": "linux",
      "logo": "https://nginxproxymanager.com/logo.svg",
      "repository": {
        "url": "https://github.com/gunk1n/gn-portainer-teplates",
        "stackfile": "stacks/nginx-proxy-manager/docker-compose.yml"
      },
      "env": [
        {
          "name": "APP_VERSION_TAG",
          "label": "NPM version tag",
          "description": "Version of Nginx Proxy Manager to use (if empty, use default 'latest')",
          "default": "latest"
        },
        {
          "name": "DB_VERSION_TAG",
          "label": "MariaDB version tag",
          "description": "Version of MariaDB to use (if empty, use default 'latest')",
          "default": "latest"
        },
        {
          "name": "APP_HTTP_PORT",
          "label": "NPM HTTP port",
          "description": "if empty, use default '80'",
          "default": "80"
        },
        {
          "name": "APP_HTTPS_PORT",
          "label": "NPM HTTPS port",
          "description": "if empty, use default '443'",
          "default": "443"
        },
        {
          "name": "APP_WEBUI_PORT",
          "label": "NPM WebUI port",
          "description": "if empty, use default '81'",
          "default": "81"
        },
        {
          "name": "DB_ROOT_PASSWORD",
          "label": "MariaDB root password",
          "description": "if empty, use default 'z69qyeS4bRooT'",
          "default": "z69qyeS4bRooT"
        },
        {
          "name": "DB_NAME",
          "label": "DB name of Nginx Proxy Manager",
          "description": "if empty, use default 'app-db'",
          "default": "app-db"
        },
        {
          "name": "DB_USER",
          "label": "DB userNginx Proxy Manager",
          "description": "if empty, use default 'app-db-user'",
          "default": "app-db-user"
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB passwordNginx Proxy Manager",
          "description": "if empty, use default 'qeWpR3yj7UseR'",
          "default": "qeWpR3yj7UseR"
        },
        {
          "name": "NETWORK_NAME",
          "label": "Name of the network to which applications are connected",
          "description": "if empty, use default 'nginx_proxy_manager'",
          "default": "nginx_proxy_manager"
        }
      ]
    },
    {
      "type": 3,
      "title": "Vaultwarden",
      "description": "Alternative implementation of the Bitwarden server API in Rust, including the Web Vault.",
      "note": "https://github.com/dani-garcia/vaultwarden | https://hub.docker.com/r/vaultwarden/server",
      "categories": [
        "Password",
        "Vault"
      ],
      "platform": "linux",
      "logo": "https://djeqr6to3dedg.cloudfront.net/repo-logos/vaultwarden/server/live/logo-1703429416075.png",
      "repository": {
        "url": "https://github.com/gunk1n/gn-portainer-teplates",
        "stackfile": "stacks/vaultwarden/docker-compose.yml"
      },
      "env": [
        {
          "name": "VW_VERSION_TAG",
          "label": "Vaultwarden version tag",
          "description": "if empty, use default 'latest'",
          "default": "latest"
        },
        {
          "name": "VW_DOMAIN",
          "label": "Vaultwarden webui domain",
          "description": "specify the domain without protocol (if empty, use default 'vw.app.gunk1n.network')",
          "default": "vw.app.gunk1n.network"
        },
        {
          "name": "VW_PORT",
          "label": "Vaultwarden webui port",
          "description": "if empty, use default '8888'",
          "default": "8888"
        },
        {
          "name": "VW_CONTAINER_PORT",
          "label": "Vaultwarden webui container port",
          "description": "if empty, use default '8888'",
          "default": "8888"
        },
        {
          "name": "NETWORK_NAME",
          "label": "Name of the network to which applications are connected",
          "description": "if empty, use default 'nginx_proxy_manager'",
          "default": "nginx_proxy_manager"
        }
      ]
    },
    {
      "type": 3,
      "title": "WG-Easy",
      "description": "The easiest way to run WireGuard VPN + Web-based Admin UI.",
      "note": "https://github.com/wg-easy/wg-easy",
      "categories": [
        "VPN Server"
      ],
      "platform": "linux",
      "logo": "https://avatars.githubusercontent.com/u/105704026?s=48&v=4",
      "repository": {
        "url": "https://github.com/gunk1n/gn-portainer-teplates",
        "stackfile": "stacks/wireguard-easy/docker-compose.yml"
      },
      "env": [
        {
          "name": "WGE_VERSION_TAG",
          "label": "Vaultwarden version tag",
          "description": "if empty, use default 'latest'",
          "default": "latest"
        },
        {
          "name": "WGE_WG_HOST",
          "label": "WGE_WG_HOST",
          "description": "WGE_WG_HOST",
          "default": "wg.app.gunk1n.network"
        },
        {
          "name": "WGE_PASSWORD_HASH",
          "label": "WGE_PASSWORD_HASH",
          "description": "WGE_PASSWORD_HASH",
          "default": "$$2a$$12$$Z3QiQxPQiwdpEkHl18B.RueV/IetSQIBWcShNhnCq.c1qxRpyEXea"
        },
        {
          "name": "WGE_LANG",
          "label": "WGE_LANG",
          "description": "WGE_LANG",
          "default": "ru"
        },
        {
          "name": "WGE_WEBUI_HOST",
          "label": "WGE_WEBUI_HOST",
          "description": "WGE_WEBUI_HOST",
          "default": "0.0.0.0"
        },
        {
          "name": "WGE_UI_PORT",
          "label": "WGE_UI_PORT",
          "description": "WGE_UI_PORT",
          "default": "55066"
        },
        {
          "name": "WGE_UDP_PORT",
          "label": "WGE_UDP_PORT",
          "description": "WGE_UDP_PORT",
          "default": "55099"
        },
        {
          "name": "WGE_WG_DEFAULT_ADDRESS",
          "label": "WGE_WG_DEFAULT_ADDRESS",
          "description": "WGE_WG_DEFAULT_ADDRESS",
          "default": "10.123.123.x"
        },
        {
          "name": "WGE_WG_DEFAULT_DNS",
          "label": "WGE_WG_DEFAULT_DNS",
          "description": "WGE_WG_DEFAULT_DNS",
          "default": "1.1.1.1,1.0.0.1,8.8.8.8,8.8.4.4"
        },
        {
          "name": "WGE_WG_DEVICE",
          "label": "WGE_WG_DEVICE",
          "description": "WGE_WG_DEVICE",
          "default": "eth0"
        },
        {
          "name": "WGE_WG_MTU",
          "label": "WGE_WG_MTU",
          "description": "WGE_WG_MTU",
          "default": "1500"
        },
        {
          "name": "WGE_WG_ALLOWED_IPS",
          "label": "WGE_WG_ALLOWED_IPS",
          "description": "WGE_WG_ALLOWED_IPS",
          "default": "0.0.0.0/0"
        },
        {
          "name": "WGE_WG_PERSISTENT_KEEPALIVE",
          "label": "WGE_WG_PERSISTENT_KEEPALIVE",
          "description": "WGE_WG_PERSISTENT_KEEPALIVE",
          "default": "25"
        },
        {
          "name": "WGE_WG_ENABLE_ONE_TIME_LINKS",
          "label": "WGE_WG_ENABLE_ONE_TIME_LINKS",
          "description": "WGE_WG_ENABLE_ONE_TIME_LINKS",
          "default": "true"
        },
        {
          "name": "WGE_MAX_AGE",
          "label": "WGE_MAX_AGE",
          "description": "WGE_MAX_AGE",
          "default": "15"
        },
        {
          "name": "WGE_UI_ENABLE_SORT_CLIENTS",
          "label": "WGE_UI_ENABLE_SORT_CLIENTS",
          "description": "WGE_UI_ENABLE_SORT_CLIENTS",
          "default": "false"
        },
        {
          "name": "WGE_WG_ENABLE_EXPIRES_TIME",
          "label": "WGE_WG_ENABLE_EXPIRES_TIME",
          "description": "WGE_WG_ENABLE_EXPIRES_TIME",
          "default": "true"
        },
        {
          "name": "WGE_UI_TRAFFIC_STATS",
          "label": "WGE_UI_TRAFFIC_STATS",
          "description": "WGE_UI_TRAFFIC_STATS",
          "default": "true"
        },
        {
          "name": "WGE_UI_CHART_TYPE",
          "label": "WGE_UI_CHART_TYPE",
          "description": "WGE_UI_CHART_TYPE",
          "default": "1"
        },
        {
          "name": "WGE_ENABLE_PROMETHEUS_METRICS",
          "label": "WGE_ENABLE_PROMETHEUS_METRICS",
          "description": "WGE_ENABLE_PROMETHEUS_METRICS",
          "default": "true"
        },
        {
          "name": "WGE_PROMETHEUS_METRICS_PASSWORD",
          "label": "WGE_PROMETHEUS_METRICS_PASSWORD",
          "description": "WGE_PROMETHEUS_METRICS_PASSWORD",
          "default": "$$2b$$10$$EUpw8ld7iIvIOwuagkcpEucDrWajST5D5TNa2SMy3dTcwIfHZQe9K"
        },
        {
          "name": "WGE_SYSCTLS_NET_IPV4_IP_FORWARD",
          "label": "WGE_SYSCTLS_NET_IPV4_IP_FORWARD",
          "description": "WGE_SYSCTLS_NET_IPV4_IP_FORWARD",
          "default": "1"
        },
        {
          "name": "WGE_SYSCTLS_NET_IPV4_SRC_VALID_MARK",
          "label": "WGE_SYSCTLS_NET_IPV4_SRC_VALID_MARK",
          "description": "WGE_SYSCTLS_NET_IPV4_SRC_VALID_MARK",
          "default": "1"
        },
        {
          "name": "NETWORK_NAME",
          "label": "Name of the network to which applications are connected",
          "description": "if empty, use default 'nginx_proxy_manager'",
          "default": "nginx_proxy_manager"
        }
      ]
    },
    {
      "type": 1,
      "title": "Tor SOCKS5 proxy + DNS",
      "description": "üê≥ Tiny Docker image (ü§è 10MB) as üßÖ Tor SOCKS5 proxy üõ°",
      "note": "https://github.com/PeterDaveHello/tor-socks-proxy",
      "categories": [
        "Proxy Server"
      ],
      "platform": "linux",
      "logo": "https://camo.githubusercontent.com/4c0184e8de794273e438bbd7803d49029a458f551711908606aab53ebb416e9a/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f382f38662f546f725f70726f6a6563745f6c6f676f5f68712e706e67",
      "image": "peterdavehello/tor-socks-proxy:latest",
      "ports": [
        "8853:53/udp",
        "8891:9150/tcp"
      ],
      "restart_policy": "unless-stopped"
    },
    {
      "type": 1,
      "title": "Watchtower",
      "description": "A process for automating Docker container base image updates.",
      "note": "https://github.com/containrrr/watchtower | https://containrrr.dev/watchtower/",
      "categories": [
        "Tools"
      ],
      "platform": "linux",
      "logo": "https://avatars.githubusercontent.com/u/49166261?s=48&v=4",
      "image": "containrrr/watchtower:latest",
      "network": "none",
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ]
    },
    {
      "type": 1,
      "title": "Stackedit",
      "description": "StackEdit 5.14.5 Server in a light Docker container",
      "note": " https://github.com/qdm12/stackedit-docker  |  https://hub.docker.com/r/qmcgaw/stackedit  |  https://github.com/benweet/stackedit",
      "categories": [
        "Markdown",
        "Text Editor"
      ],
      "platform": "linux",
      "logo": "https://raw.githubusercontent.com/benweet/stackedit/refs/heads/master/static/landing/favicon.ico",
      "image": "qmcgaw/stackedit:latest",
      "ports": [
        "9010:9010/tcp"
      ],
      "restart_policy": "always",
      "network": "nginx_proxy_manager",
      "env": [
        {
          "name": "LISTENING_PORT",
          "label": "LISTENING_PORT",
          "description": "Internal server listening port",
          "default": "9010"
        },
        {
          "name": "ROOT_URL",
          "label": "ROOT_URL",
          "description": "Root URL to use, useful when used with a reverse proxy",
          "default": "/"
        },
        {
          "name": "NODE_ENV",
          "label": "NODE_ENV",
          "description": "Sets production behavior for stackedit",
          "default": "production"
        },
        {
          "name": "DROPBOX_APP_KEY",
          "label": "DROPBOX_APP_KEY",
          "description": "https://www.dropbox.com/developers/apps  |  https://www.dropbox.com/developers/apps",
          "default": ""
        },
        {
          "name": "DROPBOX_APP_KEY_FULL",
          "label": "DROPBOX_APP_KEY_FULL",
          "description": "https://www.dropbox.com/developers/apps  |  https://www.dropbox.com/developers/apps",
          "default": ""
        },
        {
          "name": "GITHUB_CLIENT_ID",
          "label": "GITHUB_CLIENT_ID",
          "description": "https://github.com/settings/developers",
          "default": ""
        },
        {
          "name": "GITHUB_CLIENT_SECRET",
          "label": "GITHUB_CLIENT_SECRET",
          "description": "https://github.com/settings/developers",
          "default": ""
        }
      ]
    }
  ]
}
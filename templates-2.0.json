{
  "version": "2",
  "templates": [
    {
      "type": 1,
      "title": "Docker Registry",
      "description": "Docker image registry",
      "note": "https://github.com/distribution/distribution  |  https://distribution.github.io/distribution/about/deploying",
      "categories": [
        "Docker",
        "Registry"
      ],
      "platform": "linux",
      "logo": "https://avatars.githubusercontent.com/u/78096003?s=200&v=4",
      "image": "registry:latest",
      "ports": [
        "5000/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ],
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 1,
      "title": "Docker Registry (cache)",
      "note": "https://github.com/distribution/distribution  |  https://distribution.github.io/distribution/about/deploying",
      "description": "Docker image registry configured as a DockerHub pull through cache",
      "categories": [
        "Docker",
        "Registry"
      ],
      "platform": "linux",
      "logo": "https://avatars.githubusercontent.com/u/78096003?s=200&v=4",
      "image": "registry:latest",
      "ports": [
        "5000/tcp"
      ],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ],
      "env": [
        {
          "name": "REGISTRY_PROXY_REMOTEURL",
          "default": "https://registry-1.docker.io",
          "preset": true
        }
      ],
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 1,
      "title": "Ubuntu 24.04",
      "description": "Debian-based Linux operating system",
      "note": "https://hub.docker.com/_/ubuntu",
      "categories": [
        "OS",
        "Ubuntu",
        "Linux"
      ],
      "platform": "linux",
      "logo": "https://djeqr6to3dedg.cloudfront.net/repo-logos/library/ubuntu/live/logo-1720462303144.png",
      "image": "ubuntu:24.04",
      "interactive": true,
      "command": "/bin/bash",
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 3,
      "title": "Nginx Proxy Manager",
      "description": "Docker container for managing Nginx proxy hosts with a simple, powerful interface.",
      "note": "https://github.com/NginxProxyManager/nginx-proxy-manager | def_cred: admin@example.com/changeme",
      "categories": [
        "Web Server",
        "Proxy Server"
      ],
      "platform": "linux",
      "logo": "https://nginxproxymanager.com/logo.svg",
      "repository": {
        "url": "https://github.com/gunk1n/gn-portainer-teplates",
        "stackfile": "stacks/nginx-proxy-manager/docker-compose.yml"
      },
      "env": [
        {
          "name": "APP_VERSION_TAG",
          "label": "NPM version tag",
          "description": "Version of Nginx Proxy Manager to use (if empty, use default 'latest')",
          "default": "latest"
        },
        {
          "name": "DB_VERSION_TAG",
          "label": "MariaDB version tag",
          "description": "Version of MariaDB to use (if empty, use default 'latest')",
          "default": "latest"
        },
        {
          "name": "APP_HTTP_PORT",
          "label": "NPM HTTP port",
          "description": "if empty, use default '80'",
          "default": "80"
        },
        {
          "name": "APP_HTTPS_PORT",
          "label": "NPM HTTPS port",
          "description": "if empty, use default '443'",
          "default": "443"
        },
        {
          "name": "APP_WEBUI_PORT",
          "label": "NPM WebUI port",
          "description": "if empty, use default '81'",
          "default": "81"
        },
        {
          "name": "DB_ROOT_PASSWORD",
          "label": "MariaDB root password",
          "description": "if empty, use default 'z69qyeS4bRooT'",
          "default": "z69qyeS4bRooT"
        },
        {
          "name": "DB_NAME",
          "label": "DB name of Nginx Proxy Manager",
          "description": "if empty, use default 'app-db'",
          "default": "app-db"
        },
        {
          "name": "DB_USER",
          "label": "DB userNginx Proxy Manager",
          "description": "if empty, use default 'app-db-user'",
          "default": "app-db-user"
        },
        {
          "name": "DB_PASSWORD",
          "label": "DB passwordNginx Proxy Manager",
          "description": "if empty, use default 'qeWpR3yj7UseR'",
          "default": "qeWpR3yj7UseR"
        },
        {
          "name": "NETWORK_NAME",
          "label": "Name of the network to which applications are connected",
          "description": "if empty, use default 'nginx_proxy_manager'",
          "default": "nginx_proxy_manager"
        }
      ],
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 3,
      "title": "Vaultwarden",
      "description": "Alternative implementation of the Bitwarden server API in Rust, including the Web Vault.",
      "note": "https://github.com/dani-garcia/vaultwarden | https://hub.docker.com/r/vaultwarden/server",
      "categories": [
        "Password",
        "Vault"
      ],
      "platform": "linux",
      "logo": "https://djeqr6to3dedg.cloudfront.net/repo-logos/vaultwarden/server/live/logo-1703429416075.png",
      "repository": {
        "url": "https://github.com/gunk1n/gn-portainer-teplates",
        "stackfile": "stacks/vaultwarden/docker-compose.yml"
      },
      "env": [
        {
          "name": "VW_VERSION_TAG",
          "label": "Vaultwarden version tag",
          "description": "if empty, use default 'latest'",
          "default": "latest"
        },
        {
          "name": "VW_DOMAIN",
          "label": "Vaultwarden webui domain",
          "description": "specify the domain without protocol (if empty, use default 'vw.app.gunk1n.network')",
          "default": "vw.app.gunk1n.network"
        },
        {
          "name": "VW_PORT",
          "label": "Vaultwarden webui port",
          "description": "if empty, use default '8888'",
          "default": "8888"
        },
        {
          "name": "VW_CONTAINER_PORT",
          "label": "Vaultwarden webui container port",
          "description": "if empty, use default '8888'",
          "default": "8888"
        },
        {
          "name": "NETWORK_NAME",
          "label": "Name of the network to which applications are connected",
          "description": "if empty, use default 'nginx_proxy_manager'",
          "default": "nginx_proxy_manager"
        }
      ],
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 3,
      "title": "WG-Easy",
      "description": "The easiest way to run WireGuard VPN + Web-based Admin UI.",
      "note": "https://github.com/wg-easy/wg-easy",
      "categories": [
        "VPN Server"
      ],
      "platform": "linux",
      "logo": "https://avatars.githubusercontent.com/u/105704026?s=48&v=4",
      "repository": {
        "url": "https://github.com/gunk1n/gn-portainer-teplates",
        "stackfile": "stacks/wireguard-easy/docker-compose.yml"
      },
      "env": [
        {
          "name": "WGE_VERSION_TAG",
          "label": "Vaultwarden version tag",
          "description": "if empty, use default 'latest'",
          "default": "latest"
        },
        {
          "name": "WGE_WG_HOST",
          "label": "WGE_WG_HOST",
          "description": "WGE_WG_HOST",
          "default": "wg.app.gunk1n.network"
        },
        {
          "name": "WGE_PASSWORD_HASH",
          "label": "WGE_PASSWORD_HASH",
          "description": "WGE_PASSWORD_HASH",
          "default": "$$2a$$12$$Z3QiQxPQiwdpEkHl18B.RueV/IetSQIBWcShNhnCq.c1qxRpyEXea"
        },
        {
          "name": "WGE_LANG",
          "label": "WGE_LANG",
          "description": "WGE_LANG",
          "default": "ru"
        },
        {
          "name": "WGE_WEBUI_HOST",
          "label": "WGE_WEBUI_HOST",
          "description": "WGE_WEBUI_HOST",
          "default": "0.0.0.0"
        },
        {
          "name": "WGE_UI_PORT",
          "label": "WGE_UI_PORT",
          "description": "WGE_UI_PORT",
          "default": "55066"
        },
        {
          "name": "WGE_UDP_PORT",
          "label": "WGE_UDP_PORT",
          "description": "WGE_UDP_PORT",
          "default": "55099"
        },
        {
          "name": "WGE_WG_DEFAULT_ADDRESS",
          "label": "WGE_WG_DEFAULT_ADDRESS",
          "description": "WGE_WG_DEFAULT_ADDRESS",
          "default": "10.123.123.x"
        },
        {
          "name": "WGE_WG_DEFAULT_DNS",
          "label": "WGE_WG_DEFAULT_DNS",
          "description": "WGE_WG_DEFAULT_DNS",
          "default": "1.1.1.1,1.0.0.1,8.8.8.8,8.8.4.4"
        },
        {
          "name": "WGE_WG_DEVICE",
          "label": "WGE_WG_DEVICE",
          "description": "WGE_WG_DEVICE",
          "default": "eth0"
        },
        {
          "name": "WGE_WG_MTU",
          "label": "WGE_WG_MTU",
          "description": "WGE_WG_MTU",
          "default": "1500"
        },
        {
          "name": "WGE_WG_ALLOWED_IPS",
          "label": "WGE_WG_ALLOWED_IPS",
          "description": "WGE_WG_ALLOWED_IPS",
          "default": "0.0.0.0/0"
        },
        {
          "name": "WGE_WG_PERSISTENT_KEEPALIVE",
          "label": "WGE_WG_PERSISTENT_KEEPALIVE",
          "description": "WGE_WG_PERSISTENT_KEEPALIVE",
          "default": "25"
        },
        {
          "name": "WGE_WG_ENABLE_ONE_TIME_LINKS",
          "label": "WGE_WG_ENABLE_ONE_TIME_LINKS",
          "description": "WGE_WG_ENABLE_ONE_TIME_LINKS",
          "default": "true"
        },
        {
          "name": "WGE_MAX_AGE",
          "label": "WGE_MAX_AGE",
          "description": "WGE_MAX_AGE",
          "default": "15"
        },
        {
          "name": "WGE_UI_ENABLE_SORT_CLIENTS",
          "label": "WGE_UI_ENABLE_SORT_CLIENTS",
          "description": "WGE_UI_ENABLE_SORT_CLIENTS",
          "default": "false"
        },
        {
          "name": "WGE_WG_ENABLE_EXPIRES_TIME",
          "label": "WGE_WG_ENABLE_EXPIRES_TIME",
          "description": "WGE_WG_ENABLE_EXPIRES_TIME",
          "default": "true"
        },
        {
          "name": "WGE_UI_TRAFFIC_STATS",
          "label": "WGE_UI_TRAFFIC_STATS",
          "description": "WGE_UI_TRAFFIC_STATS",
          "default": "true"
        },
        {
          "name": "WGE_UI_CHART_TYPE",
          "label": "WGE_UI_CHART_TYPE",
          "description": "WGE_UI_CHART_TYPE",
          "default": "1"
        },
        {
          "name": "WGE_ENABLE_PROMETHEUS_METRICS",
          "label": "WGE_ENABLE_PROMETHEUS_METRICS",
          "description": "WGE_ENABLE_PROMETHEUS_METRICS",
          "default": "true"
        },
        {
          "name": "WGE_PROMETHEUS_METRICS_PASSWORD",
          "label": "WGE_PROMETHEUS_METRICS_PASSWORD",
          "description": "WGE_PROMETHEUS_METRICS_PASSWORD",
          "default": "$$2b$$10$$EUpw8ld7iIvIOwuagkcpEucDrWajST5D5TNa2SMy3dTcwIfHZQe9K"
        },
        {
          "name": "WGE_SYSCTLS_NET_IPV4_IP_FORWARD",
          "label": "WGE_SYSCTLS_NET_IPV4_IP_FORWARD",
          "description": "WGE_SYSCTLS_NET_IPV4_IP_FORWARD",
          "default": "1"
        },
        {
          "name": "WGE_SYSCTLS_NET_IPV4_SRC_VALID_MARK",
          "label": "WGE_SYSCTLS_NET_IPV4_SRC_VALID_MARK",
          "description": "WGE_SYSCTLS_NET_IPV4_SRC_VALID_MARK",
          "default": "1"
        },
        {
          "name": "NETWORK_NAME",
          "label": "Name of the network to which applications are connected",
          "description": "if empty, use default 'nginx_proxy_manager'",
          "default": "nginx_proxy_manager"
        }
      ],
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 3,
      "title": "WGDashboard",
      "description": "Simple dashboard for WireGuard VPN written in Python & Vue.js.",
      "note": "https://github.com/donaldzou/WGDashboard",
      "categories": [
        "VPN Server"
      ],
      "platform": "linux",
      "logo": "https://github.com/donaldzou/WGDashboard/raw/main/src/static/app/public/img/logo.png",
      "repository": {
        "url": "https://github.com/gunk1n/gn-portainer-teplates",
        "stackfile": "stacks/wgdashboard/docker-compose.yml"
      },
      "env": [
        {
          "name": "WGD_VERSION_TAG",
          "label": "WGD_VERSION_TAG",
          "description": "if empty, use default 'latest'",
          "default": "latest"
        },
        {
          "name": "WGD_UI_PORT",
          "label": "WGD_UI_PORT",
          "description": "WGD_UI_PORT",
          "default": "00000"
        },
        {
          "name": "WGD_UI_PORT_CONTAINER",
          "label": "WGD_UI_PORT_CONTAINER",
          "description": "WGD_UI_PORT_CONTAINER",
          "default": "10086"
        },
        {
          "name": "WGD_UDP_PORT",
          "label": "WGD_UDP_PORT",
          "description": "WGD_UDP_PORT",
          "default": "00000"
        },
        {
          "name": "WGD_UDP_PORT_CONTAINER",
          "label": "WGD_UDP_PORT_CONTAINER",
          "description": "WGD_UDP_PORT_CONTAINER",
          "default": "51820"
        },
        {
          "name": "WGD_TZ",
          "label": "WGD_TZ",
          "description": "Sets the timezone of the Docker container. This is to timesync the container to any other processes which would need it. [Europe/Amsterdam]",
          "default": "Europe/Moscow"
        },
        {
          "name": "WGD_GLOBAL_DNS",
          "label": "WGD_GLOBAL_DNS",
          "description": "Set the default DNS given to clients once they connect to the WireGuard tunnel, and for new peers, set to Cloudflare DNS for reliability. [1.1.1.1]",
          "default": "1.1.1.1,1.0.0.1"
        },
        {
          "name": "WGD_ENABLE",
          "label": "WGD_ENABLE",
          "description": "Enables or disables the starting of the WireGuard interface on container 'boot-up'. [none][wg0,wg2,wg13]",
          "default": "wgmgmt0"
        },
        {
          "name": "WGD_ISOLATE",
          "label": "WGD_ISOLATE",
          "description": "The Wireguard interface itself IS able to reach the peers (Done through the iptables package). [none][wg1,wg0]",
          "default": ""
        },
        {
          "name": "WGD_PUBLIC_IP",
          "label": "WGD_PUBLIC_IP",
          "description": "To reach your VPN from outside your own network, you need WG-Dashboard to know what your public IP-address is, otherwise it will generate faulty config files for clients. This happends because it is inside a Docker/Kubernetes container. In or outside of NAT is not relevant as long as the given IP-address is reachable from the internet or the target network. [default uses the return of curl ifconfig.me]",
          "default": "45.154.2.90"
        },
        {
          "name": "WGD_SYSCTLS_NET_IPV4_IP_FORWARD",
          "label": "WGD_SYSCTLS_NET_IPV4_IP_FORWARD",
          "description": "WGD_SYSCTLS_NET_IPV4_IP_FORWARD",
          "default": "1"
        },
        {
          "name": "WGD_SYSCTLS_NET_IPV4_SRC_VALID_MARK",
          "label": "WGD_SYSCTLS_NET_IPV4_SRC_VALID_MARK",
          "description": "WGD_SYSCTLS_NET_IPV4_SRC_VALID_MARK",
          "default": "1"
        },
        {
          "name": "NETWORK_NAME",
          "label": "Name of the network to which applications are connected",
          "description": "if empty, use default 'nginx_proxy_manager'",
          "default": "nginx_proxy_manager"
        }
      ],
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 1,
      "title": "Tor SOCKS5 proxy + DNS",
      "description": "🐳 Tiny Docker image (🤏 10MB) as 🧅 Tor SOCKS5 proxy 🛡",
      "note": "https://github.com/PeterDaveHello/tor-socks-proxy",
      "categories": [
        "Proxy Server"
      ],
      "platform": "linux",
      "logo": "https://camo.githubusercontent.com/4c0184e8de794273e438bbd7803d49029a458f551711908606aab53ebb416e9a/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f382f38662f546f725f70726f6a6563745f6c6f676f5f68712e706e67",
      "image": "peterdavehello/tor-socks-proxy:latest",
      "ports": [
        "8853:53/udp",
        "8891:9150/tcp"
      ],
      "restart_policy": "unless-stopped",
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 1,
      "title": "Watchtower",
      "description": "A process for automating Docker container base image updates.",
      "note": "https://github.com/containrrr/watchtower | https://containrrr.dev/watchtower/",
      "categories": [
        "Tools"
      ],
      "platform": "linux",
      "logo": "https://avatars.githubusercontent.com/u/49166261?s=48&v=4",
      "image": "containrrr/watchtower:latest",
      "network": "none",
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ],
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 3,
      "title": "Tabby-web",
      "description": "Tabby Web - an SSH/Telnet/Serial client in your browser.",
      "note": "https://github.com/gunk1n/tabby-web",
      "categories": [
        "SSH"
      ],
      "platform": "linux",
      "logo": "https://tabby.sh/32bf32ff6c87e8d18932.svg",
      "repository": {
        "url": "https://github.com/gunk1n/gn-portainer-teplates",
        "stackfile": "stacks/tabby-web/docker-compose.yml"
      },
      "env": [
        {
          "name": "TW_VERSION_TAG",
          "label": "Tabby-web version tag",
          "description": "if empty, use default 'latest'",
          "default": "latest"
        },
        {
          "name": "TW_PUID",
          "label": "TW_PUID",
          "description": "if empty, use default '1000'",
          "default": "1000"
        },
        {
          "name": "TW_PGID",
          "label": "TW_PGID",
          "description": "if empty, use default '1000'",
          "default": "1000"
        },
        {
          "name": "MARIADB_VERSION_TAG",
          "label": "MariaDB version tag",
          "description": "if empty, use default '10.7.1'",
          "default": "10.7.1"
        },
        {
          "name": "TW_PORT",
          "label": "TW_PORT",
          "description": "if empty, use default '9090'",
          "default": "9090"
        },
        {
          "name": "TW_MARIADB_DATABASE",
          "label": "TW_MARIADB_DATABASE",
          "description": "if empty, use default 'tabby'",
          "default": "tabbydb"
        },
        {
          "name": "TW_MARIADB_USER",
          "label": "TW_MARIADB_USER",
          "description": "if empty, use default 'tabby-user'",
          "default": "tabbydbuser"
        },
        {
          "name": "TW_MARIADB_PASSWORD",
          "label": "TW_MARIADB_PASSWORD",
          "description": "if empty, use default '1tabby2pwd3",
          "default": "1tabby2pwd3"
        },
        {
          "name": "TW_MYSQL_ROOT_PASSWORD",
          "label": "TW_MYSQL_ROOT_PASSWORD",
          "description": "if empty, use default '1tabby2pwd3'",
          "default": "1tabby2pwd3"
        },
        {
          "name": "TW_DEBUG",
          "label": "TW_DEBUG",
          "description": "if empty, use default 'False'",
          "default": "False"
        },
        {
          "name": "TW_SOCIAL_AUTH_GITHUB_KEY",
          "label": "TW_SOCIAL_AUTH_GITHUB_KEY",
          "description": "default 'empty' (go to https://github.com/settings/applications)",
          "default": ""
        },
        {
          "name": "TW_SOCIAL_AUTH_GITHUB_SECRET",
          "label": "TW_SOCIAL_AUTH_GITHUB_SECRET",
          "description": "default 'empty' (go to https://github.com/settings/applications)",
          "default": ""
        },
        {
          "name": "TWCG_VERSION_TAG",
          "label": "TWCG_VERSION_TAG",
          "description": "if empty, use default 'master' (value 'latest or master')",
          "default": "master"
        },
        {
          "name": "TWCG_AUTH_TOKEN",
          "label": "TWCG_AUTH_TOKEN",
          "description": "if empty, use default 'tabby-token123'",
          "default": "tabby-token123"
        },
        {
          "name": "TWCG_PORT",
          "label": "TWCG_PORT",
          "description": "if empty, use default '9000'",
          "default": "9000"
        },
        {
          "name": "TWCG_HOST_IP",
          "label": "TWCG_HOST_IP",
          "description": "if empty, use default '0.0.0.0'",
          "default": "0.0.0.0"
        },
        {
          "name": "NETWORK_NAME",
          "label": "Name of the network to which applications are connected",
          "description": "if empty, use default 'nginx_proxy_manager'",
          "default": "nginx_proxy_manager"
        }
      ],
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    },
    {
      "type": 3,
      "title": "SemaphoreUI",
      "description": "Modern UI and powerful API for Ansible, Terraform, OpenTofu, PowerShell and other DevOps tools.",
      "note": "https://github.com/semaphoreui/semaphore | https://www.semaphoreui.ru/install/docker/2_12/",
      "categories": [
        "Ansible"
      ],
      "platform": "linux",
      "logo": "https://avatars.githubusercontent.com/u/98574287?s=48&v=4",
      "repository": {
        "url": "https://github.com/gunk1n/gn-portainer-teplates",
        "stackfile": "stacks/semaphore/docker-compose.yml"
      },
      "env": [
        {
          "name": "SEMAPHORE_VERSION_TAG",
          "label": "SemaphoreUI version tag",
          "description": "...",
          "default": "v2.12.9"
        },
        {
          "name": "SEMAPHORE_DB_DIALECT",
          "label": "SemaphoreUI db type",
          "description": "...",
          "default": "bolt"
        },
        {
          "name": "SEMAPHORE_HOST_PORT",
          "label": "SemaphoreUI host port",
          "description": "default '3000'",
          "default": "3333"
        },
        {
          "name": "SEMAPHORE_CONTAINER_PORT",
          "label": "SemaphoreUI container port",
          "description": "default '3000'",
          "default": "3333"
        },
        {
          "name": "SEMAPHORE_ADMIN",
          "label": "SemaphoreUI Admin login",
          "description": "",
          "default": ""
        },
		{
          "name": "SEMAPHORE_ADMIN_NAME",
          "label": "SemaphoreUI Admin name",
          "description": "...",
          "default": ""
        },
		{
          "name": "SEMAPHORE_ADMIN_PASSWORD",
          "label": "SemaphoreUI Admin password",
          "description": "...",
          "default": ""
        },
		{
          "name": "SEMAPHORE_ADMIN_EMAIL",
          "label": "SemaphoreUI Admin mail",
          "description": "...",
          "default": ""
        },
		{
          "name": "ANSIBLE_HOST_KEY_CHECKING",
          "label": "ANSIBLE_HOST_KEY_CHECKING",
          "description": "Avoid host key checking by the tools Ansible uses to connect to the host.",
          "default": "True"
        },
        {
          "name": "NETWORK_NAME",
          "label": "Name of the network to which applications are connected",
          "description": "if empty, use default 'nginx_proxy_manager'",
          "default": "nginx_proxy_manager"
        }
      ],
      "maintainer": "https://github.com/gunk1n/gn-portainer-teplates"
    }
  ]
}